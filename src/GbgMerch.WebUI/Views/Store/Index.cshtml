@model List<GbgMerch.WebUI.Models.StoreProductViewModel>

@{
    ViewData["Title"] = "Store";
}

<div class="text-center mb-6">
    <h1 class="display-4">Welcome to GbgMerch</h1>
    <p class="lead">Discover our high-quality merchandise for developers and tech enthusiasts.</p>
</div>

<h2 class="text-2xl font-bold mb-4">Featured Products</h2>

<div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
    @foreach (var item in Model)
    {
        var product = item.Product;

        <div class="col">
            <div class="card h-100 shadow-sm">
                <img src="@product.ImageUrl" class="card-img-top" alt="@product.Name" />
                <div class="card-body d-flex flex-column">
                    <h5 class="card-title">@product.Name</h5>
                    <p class="card-text">@product.Description</p>
                    <p class="fw-bold">SEK @product.Price.Amount @product.Price.Currency</p>
                    <p class="text-success">In Stock: @product.StockQuantity</p>

                    <!-- ⭐ Stjärnor + betyg -->
                    @if (item.ReviewCount > 0)
                    {
                        <div class="mb-2">
                            @for (int i = 1; i <= 5; i++)
                            {
                                if (i <= Math.Floor(item.AverageRating))
                                {
                                    <i class="bi bi-star-fill text-warning"></i>
                                }
                                else if (i == Math.Ceiling(item.AverageRating) && item.AverageRating % 1 >= 0.5)
                                {
                                    <i class="bi bi-star-half text-warning"></i>
                                }
                                else
                                {
                                    <i class="bi bi-star text-warning"></i>
                                }
                            }
                            <span class="ms-1">@item.AverageRating.ToString("F1")</span><br />
                            <small class="text-muted">@item.ReviewCount review@(item.ReviewCount == 1 ? "" : "s")</small>
                        </div>
                    }
                    else
                    {
                        <p class="text-muted mb-2">No reviews yet</p>
                    }

                    <div class="mt-auto d-flex gap-2 justify-content-center">
                        <!-- View Details -->
                        <a class="btn btn-primary rounded-pill px-3 py-1 d-flex align-items-center gap-2"
                           style="font-size: 1rem;" 
                           asp-controller="Store" asp-action="Details" asp-route-id="@product.Id">
                            <i class="bi bi-eye"></i> View Details
                        </a>

                        <!-- Add to Cart -->
                        <form method="post"
                              asp-controller="Cart"
                              asp-action="AddToCart"
                              asp-route-productId="@product.Id"
                              asp-route-quantity="1"
                              class="add-to-cart-form">
                            <button type="submit" class="btn btn-primary rounded-pill px-4 py-2">
                                <i class="bi bi-cart"></i> Add to Cart
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<!-- JavaScript för AJAX Cart -->
<script>
    document.querySelectorAll('.add-to-cart-form').forEach(form => {
        form.addEventListener('submit', async function (event) {
            event.preventDefault();

            const formData = new FormData(this);

            const response = await fetch(this.action, {
                method: 'POST',
                body: formData
            });

            if (response.ok) {
                alert('Product has been added to the cart!');

                const countResponse = await fetch('/Cart/GetCartCount');
                if (countResponse.ok) {
                    const count = await countResponse.json();
                    const cartCountElement = document.getElementById('cart-count');
                    if (cartCountElement) {
                        cartCountElement.textContent = count;
                        cartCountElement.style.display = count > 0 ? 'inline-block' : 'none';
                    }
                }
            } else {
                alert('Server error when adding to cart.');
            }
        });
    });
</script>
